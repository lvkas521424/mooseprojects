════════════════════════════════════════════════════════════════
  Fortran模块依赖 - 完全自动化解决方案
════════════════════════════════════════════════════════════════

✅ 已为你的项目配置好完全自动化的Fortran依赖管理！

────────────────────────────────────────────────────────────────
  核心命令（记住这一个就够了！）
────────────────────────────────────────────────────────────────

    make update-fortran-deps

运行时机：
  • 添加新的.f90文件后
  • 修改模块依赖关系后
  • 首次设置项目时

────────────────────────────────────────────────────────────────
  完整工作流程
────────────────────────────────────────────────────────────────

第一次使用：
  1. cd /home/lvkas/projects/mooseprojects
  2. make update-fortran-deps
  3. make -j8
  
日常使用：
  编辑Fortran代码 → make update-fortran-deps → make -j8

────────────────────────────────────────────────────────────────
  其他有用命令
────────────────────────────────────────────────────────────────

  make check-fortran-deps    查看依赖关系
  make debug-tran_heat       显示当前配置
  make clean-tran_heat       清理构建产物

────────────────────────────────────────────────────────────────
  工作原理
────────────────────────────────────────────────────────────────

  1. Python脚本扫描所有.f90文件
  2. 自动分析module定义和use依赖
  3. 计算正确的编译顺序
  4. 生成 contrib/tran_heat/tran_heat_auto.mk
  5. Make自动使用正确的编译顺序

────────────────────────────────────────────────────────────────
  详细文档
────────────────────────────────────────────────────────────────

  contrib/README_FORTRAN.md              完整参考手册
  contrib/AUTO_WORKFLOW.md               工作流程详解
  contrib/FORTRAN_DEPENDENCY_GUIDE.md    技术指南
  contrib/QUICK_START.md                 5分钟快速入门

────────────────────────────────────────────────────────────────
  故障排查
────────────────────────────────────────────────────────────────

如果编译出错：
  1. make clean-tran_heat
  2. make update-fortran-deps
  3. make debug-tran_heat  (检查配置)
  4. make -j2              (减少并行数)

────────────────────────────────────────────────────────────────

👉 现在试试：make update-fortran-deps

════════════════════════════════════════════════════════════════

